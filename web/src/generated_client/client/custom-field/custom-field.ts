/**
 * Generated by orval v6.30.2 🍺
 * Do not edit manually.
 * The Dash Backend
 * The Dash Backend API
 * OpenAPI spec version: 0.0.1
 */
import { useMutation } from "@tanstack/react-query";
import type {
  MutationFunction,
  UseMutationOptions,
  UseMutationResult,
} from "@tanstack/react-query";
import { useCallback } from "react";
import type {
  PostCustomField200,
  PostCustomFieldBody,
  PostCustomFieldDeleteBody,
  PutCustomField200,
  PutCustomFieldBody,
} from "../../models";
import { useCustomInstance } from "../../../utils/axiosInstance";

export const usePostCustomFieldHook = () => {
  const postCustomField = useCustomInstance<PostCustomField200>();

  return useCallback(
    (postCustomFieldBody: PostCustomFieldBody) => {
      return postCustomField({
        url: `http://localhost:4000/custom-field`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: postCustomFieldBody,
      });
    },
    [postCustomField],
  );
};

export const usePostCustomFieldMutationOptions = <
  TError = string,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<ReturnType<typeof usePostCustomFieldHook>>>,
    TError,
    { data: PostCustomFieldBody },
    TContext
  >;
}): UseMutationOptions<
  Awaited<ReturnType<ReturnType<typeof usePostCustomFieldHook>>>,
  TError,
  { data: PostCustomFieldBody },
  TContext
> => {
  const { mutation: mutationOptions } = options ?? {};

  const postCustomField = usePostCustomFieldHook();

  const mutationFn: MutationFunction<
    Awaited<ReturnType<ReturnType<typeof usePostCustomFieldHook>>>,
    { data: PostCustomFieldBody }
  > = (props) => {
    const { data } = props ?? {};

    return postCustomField(data);
  };

  return { mutationFn, ...mutationOptions };
};

export type PostCustomFieldMutationResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof usePostCustomFieldHook>>>
>;
export type PostCustomFieldMutationBody = PostCustomFieldBody;
export type PostCustomFieldMutationError = string;

export const usePostCustomField = <
  TError = string,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<ReturnType<typeof usePostCustomFieldHook>>>,
    TError,
    { data: PostCustomFieldBody },
    TContext
  >;
}): UseMutationResult<
  Awaited<ReturnType<ReturnType<typeof usePostCustomFieldHook>>>,
  TError,
  { data: PostCustomFieldBody },
  TContext
> => {
  const mutationOptions = usePostCustomFieldMutationOptions(options);

  return useMutation(mutationOptions);
};
/**
 * Edit a custom field
 */
export const usePutCustomFieldHook = () => {
  const putCustomField = useCustomInstance<PutCustomField200>();

  return useCallback(
    (putCustomFieldBody: PutCustomFieldBody) => {
      return putCustomField({
        url: `http://localhost:4000/custom-field`,
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        data: putCustomFieldBody,
      });
    },
    [putCustomField],
  );
};

export const usePutCustomFieldMutationOptions = <
  TError = string,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<ReturnType<typeof usePutCustomFieldHook>>>,
    TError,
    { data: PutCustomFieldBody },
    TContext
  >;
}): UseMutationOptions<
  Awaited<ReturnType<ReturnType<typeof usePutCustomFieldHook>>>,
  TError,
  { data: PutCustomFieldBody },
  TContext
> => {
  const { mutation: mutationOptions } = options ?? {};

  const putCustomField = usePutCustomFieldHook();

  const mutationFn: MutationFunction<
    Awaited<ReturnType<ReturnType<typeof usePutCustomFieldHook>>>,
    { data: PutCustomFieldBody }
  > = (props) => {
    const { data } = props ?? {};

    return putCustomField(data);
  };

  return { mutationFn, ...mutationOptions };
};

export type PutCustomFieldMutationResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof usePutCustomFieldHook>>>
>;
export type PutCustomFieldMutationBody = PutCustomFieldBody;
export type PutCustomFieldMutationError = string;

export const usePutCustomField = <
  TError = string,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<ReturnType<typeof usePutCustomFieldHook>>>,
    TError,
    { data: PutCustomFieldBody },
    TContext
  >;
}): UseMutationResult<
  Awaited<ReturnType<ReturnType<typeof usePutCustomFieldHook>>>,
  TError,
  { data: PutCustomFieldBody },
  TContext
> => {
  const mutationOptions = usePutCustomFieldMutationOptions(options);

  return useMutation(mutationOptions);
};
/**
 * Delete a custom field
 */
export const usePostCustomFieldDeleteHook = () => {
  const postCustomFieldDelete = useCustomInstance<unknown>();

  return useCallback(
    (postCustomFieldDeleteBody: PostCustomFieldDeleteBody) => {
      return postCustomFieldDelete({
        url: `http://localhost:4000/custom-field/delete`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: postCustomFieldDeleteBody,
      });
    },
    [postCustomFieldDelete],
  );
};

export const usePostCustomFieldDeleteMutationOptions = <
  TError = string,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<ReturnType<typeof usePostCustomFieldDeleteHook>>>,
    TError,
    { data: PostCustomFieldDeleteBody },
    TContext
  >;
}): UseMutationOptions<
  Awaited<ReturnType<ReturnType<typeof usePostCustomFieldDeleteHook>>>,
  TError,
  { data: PostCustomFieldDeleteBody },
  TContext
> => {
  const { mutation: mutationOptions } = options ?? {};

  const postCustomFieldDelete = usePostCustomFieldDeleteHook();

  const mutationFn: MutationFunction<
    Awaited<ReturnType<ReturnType<typeof usePostCustomFieldDeleteHook>>>,
    { data: PostCustomFieldDeleteBody }
  > = (props) => {
    const { data } = props ?? {};

    return postCustomFieldDelete(data);
  };

  return { mutationFn, ...mutationOptions };
};

export type PostCustomFieldDeleteMutationResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof usePostCustomFieldDeleteHook>>>
>;
export type PostCustomFieldDeleteMutationBody = PostCustomFieldDeleteBody;
export type PostCustomFieldDeleteMutationError = string;

export const usePostCustomFieldDelete = <
  TError = string,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<ReturnType<typeof usePostCustomFieldDeleteHook>>>,
    TError,
    { data: PostCustomFieldDeleteBody },
    TContext
  >;
}): UseMutationResult<
  Awaited<ReturnType<ReturnType<typeof usePostCustomFieldDeleteHook>>>,
  TError,
  { data: PostCustomFieldDeleteBody },
  TContext
> => {
  const mutationOptions = usePostCustomFieldDeleteMutationOptions(options);

  return useMutation(mutationOptions);
};
